#----------------------------------
# JACKSON LABS Sybase database mgd
#----------------------------------
# 2005-06-15 (galt)

# Scripts are currently in /cluster/home/galt/jackson

# These scripts end up calling utility script query
#  which handles using sqsh utility (sql-shell) from sqsh.org.
#  sqsh was compiled --with-static and placed in /cluster/bin/i386/
#  it uses freetds from freetds.org for free libraries to connect 
#  to sybase.  sqsh also requires this in your home directory:
#[hgwdev:~> cat .freetds.conf
#[global]
#        host = gondor.informatics.jax.org
#	        port = 4025
#
#  The freebcp (bulk copy) utility which comes with freetds is 
#  used to dump all the rows from sybase - unfortunately
#  freebcp does not have a static-compile option handy.

setenv jdb jackson20060125

# make database jackson on dev
hgsql hg17 -e "create database $jdb"

# Transferring table structure and data from jackson
#  this calls gettable (7 hours)
getAllTables

# Transferring Index keys from jackson
#  this calls getindex
getAllIndexes (took 2days - use kolossus next time)

# Transerring images from jackson
#  this calls getimage
getAllImages  (took 3 hours to download almost 8k images)
# Currently these images are saved to /san/sanvol1/scratch/visiGene/downloads/jackson/$jdb/
# Now using this relationship uncovered by Jim which is much nicer:
#> mysql> select accID,_Object_key from ACC_Accession where
#> accID="PIX:5908";
#> +----------+-------------+
#> | accID    | _Object_key |
#> +----------+-------------+
#> | PIX:5908 |        8576 |
#> +----------+-------------+
#
# hgwdev:~jackson>hgsql jackson -BN -e 'select count(*) from ACC_Accession where prefixPart = "PIX:"'
# 7997
#
#hgsql $jdb -BN -e 'select substring(accID,5) from ACC_Accession where prefixPart = "PIX:"' > pixIds.list
# 

# Of course the data is live and they get new stuff deposited every week,
#  we don't at this time have a live update process but each table in jackson
#  has columns created and modified that are date-time.  We can use this
#  for an incremental db update.
#


# of images from the first jackson download 
ls /cluster/panasas/home/store/galt/jacksonLab/ | grep '.html' | wc -l
  12005  (we downloaded this many htmls by imageid rather than pixid)

# of successful pixids from that set
ls /gbdb/visiGene/full/inSitu/Mouse/jax/ | grep '.jpg' | wc -l
   7996

# of new pix downloaded using PIX: info that we didn't have before
ls /san/sanvol1/scratch/visiGene/downloads/jackson/jackson20060125/ | wc -l
   7949

# attempted - we didn't have any download failures
hgwdev:~/jackson/2006-01-25> wc -l pix-downloaded.list
   7949 pix-downloaded.list

# of MB downloaded jpgs
[hgwdev:/san/sanvol1/scratch/visiGene/downloads/jackson/jackson20060125> 
du -hs 
806M


create parasol directory and a list of the jpg files.
ssh pk
cd /san/sanvol1/scratch/visiGene/downloads/jackson/jackson20060125/
mkdir prepImageRun
ls | grep '.jpg$' > prepImageRun/jpg.lst
cd prepImageRun

# Create script that uses ImageMagick to make tiles and thumbs
cat << '_EOF_' > vgPrepImage
#!/bin/tcsh
if ("$1" == "") then
    echo "must specify input file on the commandline"
    exit 1
endif
echo "processing $1 ..."
set filepath="/san/sanvol1/scratch/visiGene/downloads/jackson/jackson20060125/$1"
cd /cluster/store11/visiGene/gbdb/full/inSitu/Mouse/jax/
cp $filepath .
mkdir $1:r
cd $1:r

set filename=$filepath:t
set basename=$filename:r
set ext=$filename:e

convert $filepath               -crop 512x512 -quality 75 ${basename}_0_%03d.$ext
convert $filepath -resize 50%   -crop 512x512 -quality 75 ${basename}_1_%03d.$ext
convert $filepath -resize 25%   -crop 512x512 -quality 75 ${basename}_2_%03d.$ext
convert $filepath -resize 12.5% -crop 512x512 -quality 75 ${basename}_3_%03d.$ext
convert $filepath -resize 6.25% -crop 512x512 -quality 75 ${basename}_4_%03d.$ext

convert $filepath -resize 200 /cluster/store11/visiGene/gbdb/200/inSitu/Mouse/jax/$1
'_EOF_'
# << this line makes emacs coloring happy

chmod a+x vgPrepImage

# Create parasol batch
cat << '_EOF_' > gsub
#LOOP
vgPrepImage $(path1)
#ENDLOOP
'_EOF_'
# << this line makes emacs coloring happy

gensub2 jpg.lst single gsub spec
para make spec


[pk:/san/sanvol1/scratch/visiGene/downloads/jackson/jackson20060125/prepImageRun> /parasol/bin/para time
7949 jobs in batch
11728 jobs (including everybody's) in Parasol queue.
Checking finished jobs
Completed: 7949 of 7949 jobs
CPU time in finished jobs:       4519s      75.31m     1.26h    0.05d  0.000 y
IO & Wait Time:                713345s   11889.09m   198.15h    8.26d  0.023 y
Average job time:                  90s       1.51m     0.03h    0.00d
Longest running job:                0s       0.00m     0.00h    0.00d
Longest finished job:             260s       4.33m     0.07h    0.00d
Submission to last job:          3766s      62.77m     1.05h    0.04d

============================================

Be sure to run ANALYZE TABLE on at least this set of key 
tables, otherwise vgLoadJax will be horrendously slow.

ANALYZE TABLE MRK_Marker;
ANALYZE TABLE GXD_Assay;
ANALYZE TABLE GXD_Specimen;
ANALYZE TABLE GXD_InSituResult;
ANALYZE TABLE GXD_InSituResultImage;
ANALYZE TABLE GXD_FixationMethod;
ANALYZE TABLE GXD_EmbeddingMethod;
ANALYZE TABLE IMG_ImagePane;
ANALYZE TABLE IMG_Image;
ANALYZE TABLE ACC_Accession;

I have added ANALYZE TABLE to loadIndex so it should be ok now.

============================================

20060125 ABANDONED, GOING TO FRESH UPDATE 20060328

The 20060125 was getting stale by the time we got back to it,
plus we found that there was a problem with the freebcp output
not being escaped properly for things like /t, /n and NULLs.

===========


20060328 JAX UPDATE BEGINS:  (20060328 done galt)


I wrote a new utility called mysqlEscape.c that does a nice
job of taking freebcp output and escaping it properly
for mysql.  I also revamped the utilities, since
at this time, because disk space on hgwdev for mysql is very scarce,
and because the cpu is also overloaded, we are offloading
to kkr3u00 which has 8GB ram, nobody else using it.
But it is mysql5 which is both good and bad.  
We can't create tables on mysql5 and then push them to mysql4,
so that is limiting, but it does allow us to put the 
jackson20060328 db on kkr3u00, and update the data,
and then run the vgLoadJax utility to create .tab and .ra.
This isolation works pretty well.  

Unfortunately, because kkr3u00 has no internet connection
to the outside world, I have to re-write the scripts,
basically splitting them into two parts, "get" scripts
that run on hgwdev and need internet connection to connect
to MGI JAX Sybase db, and "load" scripts that run on 
kkr3u00 and can access the jackson20060328 db.

######### JAX MGI db update for VisiGene  #####################################
# Download and install freetds and sqsh so you can download the Sybase JAX data.
# Make sure freebcp gets compiled so that it can handle files > 2GB.
setenv CFLAGS "-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"
./configure --prefix=$HOME
./make
cp src/apps/freebcp /cluster/bin/$MACHTYPE/
./make install

# Compile mysqlEscape.c if needed.

ssh hgwdev
setenv jdb jackson20060328
mkdir /san/sanvol1/visiGene/offline/jax/$jdb
getAllTables
getAllIndexes
getAllImages
ssh kkr3u00
setenv jdb jackson20060328
cd ~/kent/src/hg/visiGene/jackson
hgsql mysql -e "drop database $jdb"
hgsql mysql -e "create database $jdb"
loadAllTables
loadAllIndexes


# of images from the first jackson download 
ls /cluster/panasas/home/store/galt/jacksonLab/ | grep '.html' | wc -l
  12005  (we downloaded this many htmls by imageid rather than pixid)

# of successful pixids from that set
ls /gbdb/visiGene/full/inSitu/Mouse/jax/ | grep '.jpg' | wc -l
  15951  

# of previous pix downloaded using PIX: info on 20060125 
ls /san/sanvol1/scratch/visiGene/downloads/jackson/jackson20060125/ | grep '[.]jpg$' | wc -l
   7949

# of new pix downloaded using PIX: info that we didn't have before
ls /san/sanvol1/scratch/visiGene/downloads/jackson/jackson20060328/ | grep '[.]jpg$' | wc -l
   62
# not very many new pix in the last two months


# attempted - we didn't have any download failures
wc -l ~/kent/src/hg/visiGene/jackson/pix-downloaded.list
   62

# of MB downloaded jpgs
du -hs /san/sanvol1/scratch/visiGene/downloads/jackson/jackson20060328/
   18M



#create parasol directory and a list of the jpg files.
ssh pk
cd /san/sanvol1/scratch/visiGene/downloads/jackson/jackson20060328/
mkdir prepImageRun
ls | grep '.jpg$' > prepImageRun/jpg.lst
cd prepImageRun

# Create parasol batch
cat << '_EOF_' > gsub
#LOOP
vgPrepImage /san/sanvol1/scratch/visiGene/downloads/jackson/jackson20060328 /san/sanvol1/visiGene/gbdb/200/inSitu/Mouse/jax  /san/sanvol1/visiGene/gbdb/full/inSitu/Mouse/jax $(path1)
#ENDLOOP
'_EOF_'
# << this line makes emacs coloring happy

gensub2 jpg.lst single gsub spec
para make spec


[pk:/san/sanvol1/scratch/visiGene/downloads/jackson/jackson20060328/prepImageRun> /parasol/bin/para time
62 jobs in batch
2 jobs (including everybody's) in Parasol queue.
Checking finished jobs
Completed: 62 of 62 jobs
CPU time in finished jobs:          5s       0.09m     0.00h    0.00d  0.000 y
IO & Wait Time:                   344s       5.73m     0.10h    0.00d  0.000 y
Average job time:                   6s       0.09m     0.00h    0.00d
Longest running job:                0s       0.00m     0.00h    0.00d
Longest finished job:               9s       0.15m     0.00h    0.00d
Submission to last job:            20s       0.33m     0.01h    0.00d

ssh hgwdev
find /gbdb/visiGene/200/inSitu/Mouse/jax/ -name '*.jpg' -mtime -1 | wc -l
     62
find /gbdb/visiGene/full/inSitu/Mouse/jax/ -name '*.jpg' -mtime -1 -maxdepth 1 | wc -l
     62
     

#################################################
# 13000 pix were missing levels 5 and 6 for jax.  
# Please see visiGene.txt make doc (2007-04-20)
#################################################


##############################################
# Panasas is going away 2007-08-27
#  so I have requested the following rsync
#  to move it to a new location on sanvol1
#  where we have lots of other original files
##############################################

please perform the following rsync as root to preserve data/ownerships:

rsync -a
 /cluster/panasas/home/store/galt/jacksonLab/
 /san/sanvol1/scratch/visiGene/downloads/jackson/jacksonLab/


# 2007-11-20 galt 
To make these more in line with the rest of the structure
these jackson downloads have been moved to /san/sanvol1/visiGene/offline/

# 2008-09-08 galt
# moved visiGene data from SAN to hive
mv /san/sanvol1/visiGene/ to /hive/data/inside/visiGene


