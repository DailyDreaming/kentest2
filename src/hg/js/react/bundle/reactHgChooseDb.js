var pt=React.PropTypes;var AssemblySearch=React.createClass({displayName:"AssemblySearch",mixins:[PathUpdate,ImmutableUpdate],propTypes:{searchTerm:pt.string},autoCompleteSourceFactory:function(){var baseUrl="../cgi-bin/hgChooseDb?hgcd_term=";var cache={};return function(request,acCallback){var key=request.term;if(cache[key]){acCallback(cache[key])}else{var url=baseUrl+encodeURIComponent(key);$.getJSON(url).done(function(result){cache[key]=result;acCallback(result)})}}},autoCompleteMenuOpen:function(){var $jq=$(this.refs.input.getDOMNode());var pos=$jq.offset().top+$jq.height();if(!isNaN(pos)){var maxHeight=$(window).height()-pos-30;var auto=$(".ui-autocomplete");var curHeight=$(auto).children().length*21;if(curHeight>maxHeight){$(auto).css({maxHeight:maxHeight+"px",overflow:"scroll",zIndex:12})}else{$(auto).css({maxHeight:"none",overflow:"hidden",zIndex:12})}}},autoCompleteSelect:function(event,ui){this.props.update(this.props.path.concat("searchDone"),ui.item);event.preventDefault()},componentDidMount:function(){var inputNode=this.refs.input.getDOMNode();var $input=$(inputNode);$input.autocomplete({delay:500,minLength:2,source:this.autoCompleteSourceFactory(),open:this.autoCompleteMenuOpen,select:this.autoCompleteSelect})},render:function(){var path=this.props.path||[];var searchTerm=this.props.searchTerm;return React.createElement("div",null,React.createElement("span",{className:"sectionItem"},"Search for an organism's common name, scientific name or database prefix:"),React.createElement(TextInput,{value:searchTerm,path:path.concat("searchTerm"),update:this.props.update,size:45,ref:"input"}))}});var noImg="../images/DOT.gif";var AppComponent=React.createClass({displayName:"AppComponent",mixins:[ImmutableUpdate],onGo:function(){var path=this.props.path||[];this.props.update(path.concat("go"))},renderSpeciesButton:function(species){var name=species.get("genome");var displayName=name;if(name==="D. melanogaster"){displayName="Fruitfly"}else if(name==="C. elegans"){displayName="Worm"}var imgPath=species.get("img")||noImg;var onClick=function(){this.props.update(["popular",name])}.bind(this);return React.createElement("div",{key:name,className:"speciesButton",onClick:onClick},displayName," ",React.createElement("br",null),React.createElement("img",{src:imgPath,className:"speciesIcon"}))},renderDbSelect:function(menuData){if(!menuData){return null}var path=this.props.path||[];var menuLabel="Choose "+menuData.get("genome")+" assembly version"+", or choose a different species above:";var imgPath=menuData.get("img");var img=imgPath?React.createElement("img",{src:imgPath,className:"speciesIcon"}):null;return React.createElement("div",{className:"sectionRow"},img,React.createElement(LabeledSelect,{label:menuLabel,selected:menuData.get("db"),options:menuData.get("dbOptions"),update:this.props.update,path:path.concat("db")}),React.createElement("br",null),React.createElement("br",null),React.createElement("input",{type:"button",value:"Go to Genome Browser",onClick:this.onGo}))},render:function(){var path=[];var appState=this.props.appState;var appStateJS=appState.toJS();console.log("top-level render:",appStateJS);var popularSpecies=appState.get("popularSpecies");var dbMenuData=appState.get("dbMenuData");var searchTerm=appState.get("searchTerm")||"";return React.createElement(Section,{title:"Select Species and Assembly Version"},popularSpecies.map(this.renderSpeciesButton).toJS(),React.createElement(AssemblySearch,{searchTerm:searchTerm,path:path,update:this.props.update}),this.renderDbSelect(dbMenuData))}});AppComponent=AppComponent;