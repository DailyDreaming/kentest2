This script that generates the push queue notes for ENCODE tracks. This program
will generate list of what files and tables are new, unchanged, and deprecated.
These notes are added to the push queue entry for composite track. It also does
some sanity checking on the files and tables. The idea is that the wrangler
will use this program to generate the notes file and edited it with whatever
special cases need to be dealt with before sending it off to QA. Hopefully this
will result in less human error and less work for all.

Here's the usage message:

hgwdev:~> encodeMkChangeNotes
usage: encodeMkChangeNotes [options] database current_release (prev_release|-)

options:
 --version             show program's version number and exit
 -h, --help            show this help message and exit
 -v, --verbose         
 -t N, --composite-name=N
                       the name of the composite track by default this is the
                       name of the current directory
 -n N, --track-name=N  the English name of track, by default this is "ENCODE
                       [composite-name]"
 --files=F             dump list of new files to F
 --tables=F            dump list of new tablesto F


So for example, you'd use it from the track's download directory like so:

hgwdev:/usr/local/apache/htdocs/goldenPath/hg18/encodeDCC/wgEncodeUwDGF/>
encodeMkChangeNotes hg18 release3 release2 >notes

The name of the composite track can be manually set with the --composite-name
option. It will default to the name of the current directory, wgEncodeUwDGF in
this case. You can set the human readable label for for the notes with
--track-name; in this case it will default to "ENCODE wgEncodeUwDGF".

The program can also be used for new "release 1" tracks. Just set the previous
release directory to -. For example:

hgwdev:~> encodeMkChangeNotes hg18 release1 - >notes

Note that it does some things differently in this case per QA's and tech
staff's request: all files include full path names.

The script does some error checking as well, so it can help find issues. These
issues are treated as warnings and printed on stderr and also written to the
notes file. The idea is that the wrangler will check them out and if they
aren't real issues, delete the warning lines from the notes file.
